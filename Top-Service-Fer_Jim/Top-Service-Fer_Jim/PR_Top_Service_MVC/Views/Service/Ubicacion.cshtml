@model IEnumerable<PR_Top_Service_MVC.Models.Service>

@{
    ViewData["Title"] = "Index";
}

<h1>Comparacion de ubicaciones</h1>

<table class="table table-striped" hidden>
    <thead>
        <tr>
            <th>
                <i class="fa fa-graduation-cap" style="color: black;"></i>
                Profesional Encargado
            </th>
            <th>
                <i class="fa fa-file-text-o" style="color: black;"></i>
                Descripcion del problema
            </th>
            <th>
                <i class="fa fa-calendar-o" style="color: black;"></i>
                Fecha para el servicio
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td class="latitud">
                    @Html.DisplayFor(modelItem => item.IdCostumerNavigation.Latitude)
                </td>
                <td class="longitud">
                    @Html.DisplayFor(modelItem => item.IdCostumerNavigation.Longitud)
                </td>
                <td class="latitud1">
                    @Html.DisplayFor(modelItem => item.Latitude)
                </td>
                <td class="longitud1">
                    @Html.DisplayFor(modelItem => item.Longitude)
                </td>
            </tr>
        }
    </tbody>
</table>
<div style="width: 70%; margin: 0 auto; display: flex; justify-content: space-between;">
    <div style="flex: 1; margin: 0 1%;">
        <label>Ubicacion del cliente</label>
        <div id="map" style="width: 100%; height: 400px;"></div>
    </div>
    <div style="flex: 1; margin: 0 1%;">
        <label>Ubicacion donde inicio el servicio</label>
        <div id="map1" style="width: 100%; height: 400px;"></div>
    </div>
</div>



<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
<script>
    var map = null; // Variable global para el mapa

    function openMap() {
        var latitudeElements = document.querySelectorAll(".latitud");
        var longitudeElements = document.querySelectorAll(".longitud");

        if (latitudeElements.length > 0 && longitudeElements.length > 0) {
            var latitude = latitudeElements[0].textContent;
            var longitude = longitudeElements[0].textContent;

            if (latitude && longitude) {
                // Si ya hay un mapa, elimínalo antes de crear uno nuevo
                if (map) {
                    map.remove();
                }

                // Crea un nuevo mapa
                map = L.map('map').setView([parseFloat(latitude), parseFloat(longitude)], 15);

                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors',
                    maxZoom: 18,
                }).addTo(map);

                L.marker([parseFloat(latitude), parseFloat(longitude)]).addTo(map);
            }
        }
    }

    // Llama a openMap al cargar la página
    openMap();
</script>

<script>
    var map = null; // Variable global para el mapa

    function openMap() {
        var latitudeElements = document.querySelectorAll(".latitud1");
        var longitudeElements = document.querySelectorAll(".longitud1");

        if (latitudeElements.length > 0 && longitudeElements.length > 0) {
            var latitude = latitudeElements[0].textContent;
            var longitude = longitudeElements[0].textContent;

            if (latitude && longitude) {
                // Si ya hay un mapa, elimínalo antes de crear uno nuevo
                if (map) {
                    map.remove();
                }

                // Crea un nuevo mapa
                map = L.map('map1').setView([parseFloat(latitude), parseFloat(longitude)], 15);

                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors',
                    maxZoom: 18,
                }).addTo(map);

                L.marker([parseFloat(latitude), parseFloat(longitude)]).addTo(map);
            }
        }
    }

    // Llama a openMap al cargar la página
    openMap();
</script>