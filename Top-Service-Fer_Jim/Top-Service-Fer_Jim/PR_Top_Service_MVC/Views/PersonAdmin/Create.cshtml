@model PR_Top_Service_MVC.Models.PersonAdmin

@{
    ViewData["Title"] = "Create";
}

<h1>Registro de Postulantes</h1>
<hr />
<div class="row">

    <div class="col-md-6">
        <form asp-action="Create" >
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label class="control-label">Nombre</label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Apellido Paterno</label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Apellido Materno</label>
                <input asp-for="SecondLastName" class="form-control" />
                <span asp-validation-for="SecondLastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Departamento</label>
                <select asp-for="IdDepartment" class="form-control" asp-items="ViewBag.IdDepartment"></select>
            </div>
            
            <div class="form-group">
                <label class="control-label">Fecha de Nacimiento</label>
                <input asp-for="Birthdate" class="form-control" />
                <span asp-validation-for="Birthdate" class="text-danger"></span>
            </div>
           
            <div class="form-group">
                <label class="control-label">Correo Electrónico</label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group" hidden>
                <label class="control-label">Correo Electrónico</label>
                <input asp-for="Role" class="form-control"  value="Admin"/>
                <span asp-validation-for="Role" class="text-danger"></span>
            </div>
            
            <div class="form-group">
                <label class="control-label">Numero de celular</label>
                <input asp-for="CelphoneNumber" class="form-control">
                <span asp-validation-for="CelphoneNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Contraseña</label>
                <input type="password" asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Confirmar Contraseña</label>
                <input type="password" id="confirmPassword" class="form-control" />
                <span id="passwordError" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Registrar" class="btn btn-primary" />
            </div>
        </form>
    </div>

</div>
@section scripts {
    <script>

        const passwordField = document.querySelector('input[name="Password"]');
        const confirmPasswordField = document.getElementById('confirmPassword');
        const passwordError = document.getElementById('passwordError');

        confirmPasswordField.addEventListener('input', () => {
            if (passwordField.value !== confirmPasswordField.value) {
                passwordError.textContent = 'Las contraseñas no coinciden';
            } else {
                passwordError.textContent = '';
            }
        });
        // Obtener el campo de fecha de nacimiento
        var birthdateInput = document.getElementById('birthdate');

        // Agregar un controlador de eventos para el cambio en el campo de fecha de nacimiento
        birthdateInput.addEventListener('change', function () {
            var birthdateValue = new Date(birthdateInput.value);
            var today = new Date();
            var minDate = new Date();
            minDate.setFullYear(today.getFullYear() - 18);
            var maxDate = new Date();
            maxDate.setFullYear(today.getFullYear() - 75);

            if (birthdateValue > minDate) {
                // Mostrar mensaje de error
                birthdateInput.setCustomValidity('Debes tener al menos 18 años de edad');
            } else if (birthdateValue < maxDate) {
                // Mostrar mensaje de error
                birthdateInput.setCustomValidity('La edad máxima permitida es 75 años');
            } else {
                // Limpiar mensaje de error
                birthdateInput.setCustomValidity('');
            }
        });


        
    </script>
}


<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
